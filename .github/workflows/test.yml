name: Test Project
on:
  push:
    branches:
      - main
env:
  DB_NAME: gha-demo-name
jobs:
  test:
    env:
      DB_USERNAME: demo-user
      DB_PASSWORD: demo-pass
    runs-on: ubuntu-latest
    outputs:
      script-data: ${{ steps.publish.outputs.my-key }}
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache Dependencies
        id: gradle-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-dependencies-${{ hashFiles('**/build.gradle') }}
      - name: Gradle build
        if: steps.gradle-cache.outputs.cache-hit != 'true'
        id: gradle-build
        run: ./gradlew build
      - name: Gradle test
        id: gradle-tests
        run: ./gradlew test
      - name: Publish Filename
        if: failure() && steps.gradle-tests.outcome == 'failure'
        id: publish
        run: echo "my-key=$(cat README.md)" >> $GITHUB_OUTPUT
      - name: Output Env Variables
        run: | 
          echo ${{ env.DB_USERNAME }}
          echo ${{ env.DB_PASSWORD }}
          echo ${{ env.DB_NAME }}
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache Dependencies
        id: gradle-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-dependencies-${{ hashFiles('**/build.gradle') }}
      - name: Gradle build run
        if: steps.gradle-cache.outputs.cache-hit != 'true'
        run: |
          ./gradlew build
          echo "Deployment Completed..!!"
      - name: Output Data
        run: echo "${{ needs.test.outputs.script-data }}"
      - name: Output Secrets Variables
        run: |
          echo ${{ env.DB_NAME }}
          echo ${{ secrets.DB_USERNAME }}
          echo ${{ secrets.DB_PASSWORD }}
